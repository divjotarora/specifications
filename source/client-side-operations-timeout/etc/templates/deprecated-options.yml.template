description: "operations error if timeoutMS is used with a deprecated timeout option"

schemaVersion: "1.2"

# Most tests in this file can be executed against any server version, but some tests execute operations that are only
# available on higher server versions (e.g. abortTransaction). To avoid too many special cases in templated tests, the
# min server version is set to 4.2 for all.
runOnRequirements:
  - minServerVersion: "4.2"

initialData:
  - collectionName: &collectionName coll
    databaseName: &databaseName test
    documents: []

tests:
  # One-off tests to assert that drivers error if both maxCommitTimeMS and timeoutMS are set.

  - description: "abortTransaction errors if maxCommitTimeMS and timeoutMS are both specified"
    operations:
      - name: createEntities
        object: testRunner
        arguments:
          entities:
            - client:
                id: &client client
            - session:
                id: &session session
                client: *client
                sessionOptions:
                  defaultTransactionOptions:
                    maxCommitTimeMS: 10
      - name: startTransaction
        object: *session
      - name: abortTransaction
        object: *session
        arguments:
          timeoutMS: 100000
        expectError:
          isClientError: true

  - description: "commitTransaction errors if maxCommitTimeMS and timeoutMS are both specified"
    operations:
      - name: createEntities
        object: testRunner
        arguments:
          entities:
            - client:
                id: &client client
            - session:
                id: &session session
                client: *client
                sessionOptions:
                  defaultTransactionOptions:
                    maxCommitTimeMS: 10
      - name: startTransaction
        object: *session
      - name: commitTransaction
        object: *session
        arguments:
          timeoutMS: 100000
        expectError:
          isClientError: true

  - description: "withTransaction errors if maxCommitTimeMS and timeoutMS are both specified"
    operations:
      - name: createEntities
        object: testRunner
        arguments:
          entities:
            - client:
                id: &client client
            - database:
                id: &database database
                client: *client
                databaseName: *databaseName
            - collection:
                id: &collection collection
                database: *database
                collectionName: *collectionName
            - session:
                id: &session session
                client: *client
                sessionOptions:
                  defaultTransactionOptions:
                    maxCommitTimeMS: 10
      - name: withTransaction
        object: *session
        arguments:
          timeoutMS: 100000
          callback: []
        expectError:
          isClientError: true

  # For each operation, run these tests:
  #
  # 1. Error if both socketTimeoutMS and timeoutMS are set.
  # 2. Error if both waitQueueTimeoutMS and timeoutMS are set.
  # 3. Error if both wTimeoutMS and timeoutMS are set.
  # 4. If the operation supports the maxTimeMS option, error if both maxTimeMS and timeoutMS are set.

  {% for operation in operations %}
  - description: "error if socketTimeoutMS and timeoutMS are both specified - {{operation.operation_name}} on {{operation.object}}"
    operations:
      - name: createEntities
        object: testRunner
        arguments:
          entities:
            - client:
                id: &client client
                uriOptions:
                  socketTimeoutMS: 10
            - database:
                id: &database database
                client: *client
                databaseName: *databaseName
            - collection:
                id: &collection collection
                database: *database
                collectionName: *collectionName
            - bucket:
                id: &bucket bucket
                database: *database
            - session:
                id: &session session
                client: *client
      - name: {{operation.operation_name}}
        object: *{{operation.object}}
        arguments:
          timeoutMS: 100000
          {% for arg in operation.arguments -%}
          {{arg}}
          {% endfor %}
        expectError:
          isClientError: true

  - description: "error if waitQueueTimeoutMS and timeoutMS are both specified - {{operation.operation_name}} on {{operation.object}}"
    operations:
      - name: createEntities
        object: testRunner
        arguments:
          entities:
            - client:
                id: &client client
                uriOptions:
                  waitQueueTimeoutMS: 10
            - database:
                id: &database database
                client: *client
                databaseName: *databaseName
            - collection:
                id: &collection collection
                database: *database
                collectionName: *collectionName
            - bucket:
                id: &bucket bucket
                database: *database
            - session:
                id: &session session
                client: *client
      - name: {{operation.operation_name}}
        object: *{{operation.object}}
        arguments:
          timeoutMS: 100000
          {% for arg in operation.arguments -%}
          {{arg}}
          {% endfor %}
        expectError:
          isClientError: true

  - description: "error if wTimeoutMS and timeoutMS are both specified - {{operation.operation_name}} on {{operation.object}}"
    operations:
      - name: createEntities
        object: testRunner
        arguments:
          entities:
            - client:
                id: &client client
                uriOptions:
                  wTimeoutMS: 10
            - database:
                id: &database database
                client: *client
                databaseName: *databaseName
            - collection:
                id: &collection collection
                database: *database
                collectionName: *collectionName
            - bucket:
                id: &bucket bucket
                database: *database
            - session:
                id: &session session
                client: *client
      - name: {{operation.operation_name}}
        object: *{{operation.object}}
        arguments:
          timeoutMS: 100000
          {% for arg in operation.arguments -%}
          {{arg}}
          {% endfor %}
        expectError:
          isClientError: true

  {% if max_time_supported(operation.operation_name) -%}
  - description: "error if maxTimeMS and timeoutMS are both specified - {{operation.operation_name}} on {{operation.object}}"
    operations:
      - name: createEntities
        object: testRunner
        arguments:
          entities:
            - client:
                id: &client client
            - database:
                id: &database database
                client: *client
                databaseName: *databaseName
            - collection:
                id: &collection collection
                database: *database
                collectionName: *collectionName
            - bucket:
                id: &bucket bucket
                database: *database
            - session:
                id: &session session
                client: *client
      - name: {{operation.operation_name}}
        object: *{{operation.object}}
        arguments:
          timeoutMS: 100000
          maxTimeMS: 100000
          {% for arg in operation.arguments -%}
          {{arg}}
          {% endfor %}
        expectError:
          isClientError: true
  {% endif -%}
  {% endfor %}
